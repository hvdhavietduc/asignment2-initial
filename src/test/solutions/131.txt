Program([
	VarDecl(n, IntegerType, IntegerLit(10))
	VarDecl(a, FloatType, FloatLit(1.0))
	VarDecl(b, FloatType, FloatLit(1.0))
	VarDecl(sum, FloatType, FloatLit(0.0))
	FuncDecl(main, VoidType, [], None, BlockStmt([VarDecl(i, IntegerType, IntegerLit(1)), WhileStmt(BinExpr(<=, Id(i), Id(n)), BlockStmt([IfStmt(BinExpr(==, Id(i), IntegerLit(1)), BlockStmt([AssignStmt(Id(sum), Id(a))]), IfStmt(BinExpr(==, Id(i), IntegerLit(2)), BlockStmt([AssignStmt(Id(sum), Id(b))]), BlockStmt([AssignStmt(Id(sum), BinExpr(+, Id(a), Id(b))), AssignStmt(Id(a), Id(b)), AssignStmt(Id(b), Id(sum))]))), AssignStmt(Id(i), BinExpr(+, Id(i), IntegerLit(1)))])), CallStmt(printf, StringLit(The sum of the first %d terms of the Fibonacci sequence is %.2f.\n), Id(n), Id(sum)), VarDecl(prod, IntegerType, IntegerLit(1)), ForStmt(AssignStmt(Id(i), IntegerLit(1)), BinExpr(<=, Id(i), Id(n)), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([AssignStmt(Id(prod), BinExpr(*, Id(prod), Id(i)))])), CallStmt(printf, StringLit(The product of the first %d positive integers is %d.\n), Id(n), Id(prod)), VarDecl(is_prime, BooleanType, BooleanLit(True)), IfStmt(BinExpr(<, Id(n), IntegerLit(2)), BlockStmt([AssignStmt(Id(is_prime), BooleanLit(False))]), BlockStmt([ForStmt(AssignStmt(Id(i), IntegerLit(2)), BinExpr(<=, Id(i), BinExpr(/, Id(n), IntegerLit(2))), BinExpr(+, Id(i), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(==, BinExpr(%, Id(n), Id(i)), IntegerLit(0)), BlockStmt([AssignStmt(Id(is_prime), BooleanLit(False)), BreakStmt()]))]))])), IfStmt(Id(is_prime), BlockStmt([CallStmt(printf, StringLit(%d is prime.\n), Id(n))]), BlockStmt([CallStmt(printf, StringLit(%d is not prime.\n), Id(n))]))]))
])