Program([
	FuncDecl(factorial, IntegerType, [Param(n, IntegerType)], None, BlockStmt([IfStmt(BinExpr(||, BinExpr(==, Id(n), IntegerLit(0)), BinExpr(==, Id(n), IntegerLit(1))), BlockStmt([ReturnStmt(IntegerLit(1))]), BlockStmt([ReturnStmt(BinExpr(*, Id(n), FuncCall(factorial, [BinExpr(-, Id(n), IntegerLit(1))])))]))]))
	FuncDecl(fibonacci, IntegerType, [Param(n, IntegerType)], None, BlockStmt([IfStmt(BinExpr(||, BinExpr(==, Id(n), IntegerLit(0)), BinExpr(==, Id(n), IntegerLit(1))), BlockStmt([ReturnStmt(Id(n))]), BlockStmt([ReturnStmt(BinExpr(+, FuncCall(fibonacci, [BinExpr(-, Id(n), IntegerLit(1))]), FuncCall(fibonacci, [BinExpr(-, Id(n), IntegerLit(2))])))]))]))
	FuncDecl(geometric_sum, IntegerType, [Param(a, FloatType), Param(r, FloatType), Param(n, IntegerType)], None, BlockStmt([IfStmt(BinExpr(==, Id(r), IntegerLit(1)), BlockStmt([ReturnStmt(BinExpr(*, Id(a), Id(n)))]), BlockStmt([ReturnStmt(BinExpr(/, BinExpr(*, Id(a), BinExpr(-, IntegerLit(1), FuncCall(pow, [Id(r), Id(n)]))), BinExpr(-, IntegerLit(1), Id(r))))]))]))
	FuncDecl(quadratic_roots, IntegerType, [Param(a, FloatType), Param(b, FloatType), Param(c, FloatType)], None, BlockStmt([VarDecl(delta, FloatType, BinExpr(-, BinExpr(*, Id(b), Id(b)), BinExpr(*, BinExpr(*, IntegerLit(4), Id(a)), Id(c)))), VarDecl(x1, FloatType), VarDecl(x2, FloatType), IfStmt(BinExpr(>, Id(delta), IntegerLit(0)), BlockStmt([AssignStmt(Id(x1), BinExpr(/, BinExpr(+, UnExpr(-, Id(b)), FuncCall(sqrt, [Id(delta)])), BinExpr(*, IntegerLit(2), Id(a)))), AssignStmt(Id(x2), BinExpr(/, BinExpr(-, UnExpr(-, Id(b)), FuncCall(sqrt, [Id(delta)])), BinExpr(*, IntegerLit(2), Id(a)))), CallStmt(printf, StringLit(The equation has two real roots: %.2f and %.2f\n), Id(x1), Id(x2))]), IfStmt(BinExpr(==, Id(delta), IntegerLit(0)), BlockStmt([AssignStmt(Id(x1), BinExpr(/, UnExpr(-, Id(b)), BinExpr(*, IntegerLit(2), Id(a)))), CallStmt(printf, StringLit(The equation has one real root: %.2f\n), Id(x1))]), BlockStmt([VarDecl(real_part, FloatType, BinExpr(/, UnExpr(-, Id(b)), BinExpr(*, IntegerLit(2), Id(a)))), VarDecl(imaginary_part, FloatType, BinExpr(/, FuncCall(sqrt, [UnExpr(-, Id(delta))]), BinExpr(*, IntegerLit(2), Id(a)))), CallStmt(printf, StringLit(The equation has two complex roots: %.2f + %.2fi and %.2f - %.2fi\n), Id(real_part), Id(imaginary_part), Id(real_part), Id(imaginary_part))])))]))
	FuncDecl(main, VoidType, [], None, BlockStmt([CallStmt(printf, StringLit(The factorial of 5 is: %d\n), FuncCall(factorial, [IntegerLit(5)])), CallStmt(printf, StringLit(The 10th Fibonacci number is: %d\n), FuncCall(fibonacci, [IntegerLit(10)])), CallStmt(printf, StringLit(The sum of the first 5 terms of the geometric series with a = 1 and r = 2 is: %.2f\n), FuncCall(geometric_sum, [IntegerLit(1), IntegerLit(2), IntegerLit(5)])), CallStmt(quadratic_roots, IntegerLit(1), UnExpr(-, IntegerLit(5)), IntegerLit(6))]))
])